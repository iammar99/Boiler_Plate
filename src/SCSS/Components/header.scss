.nav {
    background: #E8F5E9;
    min-height: 62px;
    img{
      width: 7%;
    }
}

a {
    text-decoration: none;
    color: $textColor;
    font-weight: 700;
    font-size: 22px;
    position: relative;
    width: fit-content;
}

a::after {
    content: '';
    position: absolute;
    left: 0;
    bottom: -2px;
    width: 0;
    height: 2px;
    background-color: #8b8b8b;
    transition: width 0.3s ease;
}

a:hover::after{
    width: 100%;
}




/* From Uiverse.io by JaydipPrajapati1910 */ 
.Btn {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  width: 45px;
  height: 45px;
  border: none;
  border-radius: 50%;
  cursor: pointer;
  position: relative;
  overflow: hidden;
  transition-duration: .3s;
  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.199);
  background-color: $textColor;
}


.sign {
  width: 100%;
  transition-duration: .3s;
  display: flex;
  align-items: center;
  justify-content: center;
}

.sign svg {
  width: 17px;
}

.sign svg path {
  fill: white;
}
.text {
  position: absolute;
  right: 0%;
  width: 0%;
  opacity: 0;
  color: white;
  font-size: 1.2em;
  font-weight: 600;
  transition-duration: .3s;
}
.Btn:hover {
  width: 125px;
  border-radius: 40px;
  transition-duration: .3s;
}

.Btn:hover .sign {
  width: 30%;
  transition-duration: .3s;
  padding-left: 20px;
}
.Btn:hover .text {
  opacity: 1;
  width: 70%;
  transition-duration: .3s;
  padding-right: 10px;
}
.Btn:active {
  transform: translate(2px ,2px);
}


button.login {
  background: #34cf34;
  border: 0;
  border-radius: 6px;
  align-items: center;
  a{
    color: white;
  }
  a:hover::after{
    width: 0%;
  }
}



// ------------- Resonsive -----------------


// Define variables at the top
$primary-color: $textColor;
$text-color: $bgColor;
$secondary-bg: rgb(223, 223, 223);
$border-color: rgba(0, 0, 0, 0.3);

.event-wrapper {
  font-weight: 500;
  color: $text-color;
  background-color: $primary-color;
  padding: 3px 15px;
  border-radius: 10px;
  display: flex;
  align-items: center;
  height: 2.5rem;
  width: fit-content;
  position: relative;
  cursor: pointer;
  justify-content: space-between;
  
  // Proper nesting for the input inside event-wrapper
  > .event-wrapper-inp {
    display: none;
    
    // Using & to reference the parent selector with its checked state
    &:checked {
      // Targeting sibling elements when input is checked
      + .arrow {
        transform: rotateX(180deg);
      }
      
      ~ .menu-container {
        clip-path: inset(10% 50% 90% 50% round 10px);
      }
    }
    
    &:not(:checked) {
      ~ .menu-container .menu-list {
        transform: translateY(0);
        opacity: 1;
        
        // Target specific child elements with different transitions
        &:nth-child(1) {
          transition:
            transform 0.4s var(--delay),
            opacity 0.4s var(--delay);
        }
        
        &:nth-child(2) {
          transition:
            transform 0.4s calc(var(--delay) + (var(--trdelay) * 1)),
            opacity 0.4s calc(var(--delay) + (var(--trdelay) * 1));
        }
        
        &:nth-child(3) {
          transition:
            transform 0.4s calc(var(--delay) + (var(--trdelay) * 2)),
            opacity 0.4s calc(var(--delay) + (var(--trdelay) * 2));
        }
        
        &:nth-child(4) {
          transition:
            transform 0.4s calc(var(--delay) + (var(--trdelay) * 3)),
            opacity 0.4s calc(var(--delay) + (var(--trdelay) * 3));
        }
      }
      
      ~ .bar {
        > .top {
          transform-origin: top right;
          transform: translateY(var(--transform)) rotate(-45deg);
        }
        
        > .middle {
          transform: translateX(-50%);
          opacity: 0;
        }
        
        > .bottom {
          transform-origin: bottom right;
          transform: translateY(calc(var(--transform) * -1)) rotate(45deg);
        }
      }
    }
  }
}

.arrow {
  height: 34%;
  aspect-ratio: 1;
  margin-block: auto;
  position: relative;
  display: flex;
  justify-content: center;
  transition: all 0.3s;
  
  &::after,
  &::before {
    content: "";
    position: absolute;
    background-color: $text-color;
    height: 100%;
    width: 2.5px;
    border-radius: 500px;
    transform-origin: bottom;
  }
  
  &::after {
    transform: rotate(35deg) translateX(-0.5px);
  }
  
  &::before {
    transform: rotate(-35deg) translateX(0.5px);
  }
}

.menu-container {
  background-color: $text-color;
  color: $primary-color;
  border-radius: 10px;
  position: absolute;
  z-index: 3;
  width: 150px;
  left: -100px;
  top: 130%;
  overflow: hidden;
  clip-path: inset(0% 0% 0% 0% round 10px);
  transition: all 0.4s;
}

.menu-list {
  --delay: 0.4s;
  --trdelay: 0.15s;
  padding: 8px 10px;
  border-radius: inherit;
  transition: background-color 0.2s 0s;
  position: relative;
  transform: translateY(30px);
  opacity: 0;
  
  &::after {
    content: "";
    position: absolute;
    top: 100%;
    left: 50%;
    transform: translateX(-50%);
    height: 1px;
    background-color: $border-color;
    width: 95%;
  }
  
  &:hover {
    background-color: $secondary-bg;
  }
}

.bar-event-wrapper-inp {
  -webkit-appearance: none;
  display: none;
  visibility: hidden;
}

.bar {
  display: flex;
  height: 50%;
  width: 20px;
  flex-direction: column;
  gap: 3px;
}

.bar-list {
  --transform: -25%;
  display: block;
  width: 100%;
  height: 3px;
  border-radius: 50px;
  background-color: $text-color;
  transition: all 0.4s;
  position: relative;
}

  @media screen and (max-width: 768px) {
    .responsive{
        display :block;
    }   

  }

  @media screen and (max-width: 555px) {
    .nav {
      img{
        width: 15%;
      }
    }

  }